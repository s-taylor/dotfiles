# 256 colors for vim
set -g default-terminal "screen-256color"

# pass bind-key + arrow keys to terminal
# https://superuser.com/questions/401926/how-to-get-shiftarrows-and-ctrlarrows-working-in-vim-in-tmux
set-window-option -g xterm-keys on

# Start window numbering at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Enable mouse support
set-option -g mouse on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Set escape time in tmux (fixes neovim issue)
# see https://github.com/neovim/neovim/wiki/FAQ#my-ctrl-h-mapping-doesnt-work
set -g escape-time 10

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-a
unbind C-b

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Clear history
bind b send-keys C-u \; send-keys C-k \; send-keys " clear && tmux clear-history" \; send-keys "Enter" \; run-shell "sleep .3s" \; send-keys "Up" \; send-keys C-u

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Unbind Rebinded to different key
unbind % # Horizontal Split
unbind '"' # Vertical Split
unbind & # Kill Window
unbind p # Previous Window
unbind n # Next Window
unbind , # Rename Window
#unbind $ # Rename Session
unbind [ # Copy Mode (allows scrolling)

# Unbinded Using binding for something else
unbind - # Delete the most recently copied buffer of text.

# Open new Windows in same path
bind-key c new-window -c "#{pane_current_path}"

# Copy Mode (allows scrolling)
bind-key u copy-mode

# Window splits / new Panes (use current path)
bind-key | split-window -h -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"

# Resize panes
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -R 10
bind h resize-pane -L 10

# Kill Windows
bind-key X kill-window

# Next / Previous Window
bind-key , previous-window
bind-key . next-window

# Rename Windows and Sessions
bind-key n command-prompt 'rename-window %%'
bind-key N command-prompt 'rename-session %%'

# TMUX PLUGIN MANAGER

# List of plugins (install with C-A then I)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# Tmux Resurrect Options
# Restore vim sessions
set -g @resurrect-strategy-vim 'session'

# Restore pane contents
set -g @resurrect-capture-pane-contents 'on'
